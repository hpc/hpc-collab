#!/bin/bash

## $Header: $
## Source:
## @file vclogin/config/slurm/4.configure-slurm-db

VCLOAD=../../../provision/loader/shload.sh

if [ ! -f "${VCLOAD}" ] ; then
  echo "${0}: missing: ${VCLOAD}"
  exit 99
fi
source ${VCLOAD}

# if we're given an argument, append test output to it
declare -x OUT=${1:-""}

if [ -n "${OUT}" ] ; then
  touch ${OUT} || exit 1
  exec > >(tee -a "${OUT}") 2>&1
fi

SetFlags >/dev/null 2>&1

declare -x PWD=$(pwd)
declare -x PRODUCT=$(basename ${PWD})
declare -x LICENSES_D=${PWD}/licenses
licenses=$(echo $(ls ${LICENSES_D}))
cluster=${HOSTNAME:0:2}

nodecnt=$(echo $(sinfo --format="%n %f" | grep compute | awk '{print $1}' | sort | uniq | wc -l))
n_clusters=$(ls /home | wc -l)
count=$(( ${nodecnt} * ${n_clusters} ))
numeric='^[0-9]+$'
if [ -z "${count}" ] ; then
  ErrExit ${EX_SOFTWARE} "empty count for licenses"
fi
if ! [[ ${count} =~ $numeric ]] ; then
  ErrExit ${EX_SOFTWARE} "count:${count} is non-numeric"
fi

# see if they match (are in conflict with) those in licenses/

existing_licenses=$(echo $(sacctmgr show resource withcluster cluster=${cluster} format=name%-25 --noheader))

# # sacctmgr show resource withclusters format=name%-25,server,type,count,allocated,cluster,allowed
#      Name     Server     Type  Count % Allocated ServerType    Cluster  % Allowed 
#---------- ---------- -------- ------ ----------- ---------- ---------- ---------- 
#homevagra+    slurmdb  License      4          50                    vc         50

# if license doesn't exist, add it with a count
# if license already exists, and we have a percentallowed, add that percentage, using our cluster=... entry
# if this attribute is already set, with the same value, don't redo

for lic_name in ${licenses}
do
  sacct_mgr=""
  lic=$(basename ${lic_name})
  action="add"
  if [[ "${existing_licenses}" != *"${lic}"* ]] ; then
    acction="update"
  fi

  d=${LICENSES_D}/${lic_name}
  attributes=$(echo $(ls ${d}))

  sacct_mgr_cmd="sacctmgr -iQ ${action} resource name=${lic_name} type=license count=${count} cluster=${cluster}"
  any_attr=""

  for attr_name in ${attributes}
  do
    existing=$(echo $(sacctmgr show resource where cluster=${cluster} format="name%-20" -n))
    attr_val=""
    if [ -s ${d}/${attr_name} ] ; then
      attr_val=$(cat ${d}/${attr_name})
    fi
    if [[ "${existing}" == *"${lic_name}"* ]] ; then
	existing_val=$(sacctmgr show resource where cluster=${cluster} name=${lic_name} -n | awk '{print $5}') 
	if [ "${existing_val}" = "${attr_val}" ] ; then
	  if [ "${attr_val}" -ne 0 ] ; then
            Verbose "license=${lic_name}, cluster=${cluster}, existing_val:${existing_val} = attr_val:${attr_val}, skipped"
            continue
	  fi
	fi
    fi
    if [ -z "${attr_val}" ] ; then
      continue
    fi

    needs_set="set "
    case "${action}" in
      update)  ;;
      add) needs_set="" ;;
      *) ErrExit ${EX_SOFTWARE} "unknown action:${action}" ;;
    esac

    sacct_mgr="${sacct_mgr_cmd} ${needs_set} ${attr_name}=${attr_val}"
    any_attr="${any_attr} ${attr_name}"
  done #attr_name
  if [ -n "${any_attr}" ] ; then
    Rc ErrExit ${EX_CONFIG} "${sacct_mgr}"
  fi
done #lic_name

sacctmgr show resource withcluster 

trap '' 0

exit ${EX_OK}

# vim: background=dark
