#!/bin/bash

## $Header: $
## Source:
## @file common/provision/config/selinux/3.fix-ownership

## @brief chown all files and dirs to required ownership, necessary during configuration to satisfy selinux policy

VCLOAD=../../../provision/loader/shload.sh

if [ ! -f "${VCLOAD}" ] ; then
  echo "${0}: missing: ${VCLOAD}"
  exit 99
fi
source ${VCLOAD}

# if we're given an argument, append test output to it
declare -x OUT=${1:-""}

if [ -n "${OUT}" ] ; then
  touch ${OUT} || exit 1
  exec > >(tee -a "${OUT}") 2>&1
fi

SetFlags >/dev/null 2>&1

PWD=$(pwd)
PROD=$(basename ${PWD})

if [ "${PROD}" != "${WHICH_DB}" -a "${PROD}" != "selinux" ] ; then
  echo "WHICH_DB:${WHICH_DB} != PROD:${PROD}"
  exit ${EX_OK}
fi

SEDIRS_OWNERS=dirs-ownership

if [ ! -f ${SEDIRS_OWNERS} ] ; then
  ErrExit ${EX_CONFIG} "missing ${SEDIRS_OWNERS}"
fi

_dir_or_file=""
_secontext=""
while read -r _dir_or_file _newowner
do
  _setype=""
  _symlink_arg=""

  # skip blank lines and comments
  [[ "${_dir_or_file}" =~ ^$ ]] && continue
  if [[ "${_dir_or_file}" =~ ^#.*$ ]] ; then
    Verbose " skipped: ${_dir_or_file} ${_newowner}"
    continue
  fi

  if [ ! -d "${_dir_or_file}" ] ; then
    if [ ! -f "${_dir_or_file}" ] ; then
      touch ${_dir_or_file}
    fi
  fi
  if [ -L "${_dir_or_file}" ] ; then
    _symlink_arg="-h"
  fi
  if [ -z "${_newowner}" ] ; then
    ErrExit ${EX_CONFIG} "empty owner in ${SEDIRS_OWNERS}: dir: ${_dir_or_file}"
  fi
  Rc ErrExit ${EX_OSERR} "chown ${_symlink_arg} ${_newowner} ${_dir_or_file}"
done < ${SEDIRS_OWNERS}

trap '' 0
exit ${EX_OK}
