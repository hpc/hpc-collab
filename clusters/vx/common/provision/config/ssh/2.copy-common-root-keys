#!/bin/bash

## $Header: $
## Source:
## @file .../config/ssh/2.copy-common-root-keys

VCLOAD=../../../provision/loader/shload.sh

if [ ! -f "${VCLOAD}" ] ; then
  echo "${0}: missing: ${VCLOAD}"
  exit 99
fi
source ${VCLOAD}

# if we're given an argument, append test output to it
declare -x OUT=${1:-""}

if [ -n "${OUT}" ] ; then
  touch ${OUT} || exit 1
  exec > >(tee -a "${OUT}") 2>&1
fi

declare -x ETC=/etc
declare -x ETCMUNGE=${ETC}/munge
declare -x COMMONETC=${COMMON}${ETC}

declare -x COMMONETC_SSH=${COMMONETC}/ssh
declare -x COMMONETC_SSH_SSHDCONFIG=${COMMONETC_SSH}/sshd_config
declare -x COMMONETC_SSH_SSHCONFIG=${COMMONETC_SSH}/ssh_config
declare -x COMMONETC_SSH_HOSTPUBKEYRSA=${COMMONETC_SSH}/ssh_host_rsa_key.pub
declare -x COMMONETC_SSH_HOSTPRIVKEYRSA=${COMMONETC_SSH}/ssh_host_rsa_key

declare -x COMMONETC_SHOSTSEQUIV=${COMMONETC_SSH}/shosts.equiv
declare -x COMMONETC_SSHKNOWNHOSTS=${COMMONETC_SSH}/ssh_known_hosts

declare -x SLASHROOT=/root
declare -x SLASHROOT_DOTSSH=${SLASHROOT}/.ssh
declare -x COMMONSLASHROOT=/home/${CLUSTERNAME}/common/${SLASHROOT}
declare -x COMMONSLASHROOT_DOTSSH=${COMMONSLASHROOT}/.ssh
declare -x COMMONSLASHROOT_DOTSSH_AUTHORIZEDKEYS=${COMMONSLASHROOT_DOTSSH}/authorized_keys
declare -x COMMONSLASHROOT_DOTSSH_PRIVKEYRSA=${COMMONSLASHROOT_DOTSSH}/id_rsa
declare -x COMMONSLASHROOT_DOTSSH_PUBKEYRSA=${COMMONSLASHROOT_DOTSSH}/id_rsa.pub

for d in ${COMMONETC_SSH} ${COMMONSLASHROOT} ${COMMONSLASHROOT_DOTSSH} ${SLASHROOT_DOTSSH}
do
  Rc ErrExit ${EX_OSFILE} "mkdir -p ${d}"
done

for d in ${COMMONSLASHROOT_DOTSSH} ${SLASHROOT_DOTSSH}
do
  Rc ErrExit ${EX_OSFILE} "chmod 0700 ${d}"
done

# create root key pair, authorized keys, known_hosts => common intracluster storage (COMMONSLASHROOT)
Rc ErrExit ${EX_OSFILE} "rm -f ${SLASHROOT_DOTSSH}/id_rsa ${SLASHROOT_DOTSSH}/id_rsa.pub ${SLASHROOT_DOTSSH}/authorized_keys"

Rc ErrExit ${EX_OSFILE} "cp -b ${COMMONSLASHROOT_DOTSSH}/* ${SLASHROOT_DOTSSH}"
Rc ErrExit ${EX_OSFILE} "cp -b ${SLASHROOT_DOTSSH}/authorized_keys ${SLASHROOT_DOTSSH}/id_rsa.pub"
Rc ErrExit ${EX_OSFILE} "cp -b ${COMMONSLASHROOT_DOTSSH_AUTHORIZEDKEYS} ${SLASHROOT_DOTSSH}/authorized_keys"

trap '' 0
exit ${EX_OK}
