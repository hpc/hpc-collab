#!/bin/bash

## $Header: $
## Source:
## @file vcdb/install/slurm/2.check-slurmdbd-config

## @brief start slurmdbd service early

VCLOAD=../../../provision/loader/shload.sh

if [ ! -f "${VCLOAD}" ] ; then
  echo "${0}: missing: ${VCLOAD}"
  exit 99
fi
source ${VCLOAD}

# if we're given an argument, append test output to it
declare -x OUT=${1:-""}

if [ -n "${OUT}" ] ; then
  touch ${OUT} || exit 1
  exec > >(tee -a "${OUT}") 2>&1
fi

ETCSLURM=/etc/slurm
SLURMDBD_CONF=${ETCSLURM}/slurmdbd.conf
SLURM_CONF=${ETCSLURM}/slurm.conf
VARLOGSLURM=/var/log/slurm
VARLOGSLURM_LINK=$(readlink ${VARLOGSLURM})

for _v in SLURM_CONF SLURMDBD_CONF
do
	if [ ! -f "${!_v}"  ] ; then
		ErrExit ${EX_CONFIG} "${_v}:${!_v} missing"
	fi

	if [ ! -s "${!_v}"  ] ; then
		ErrExit ${EX_CONFIG} "${_v}:${!_v} empty"
	fi
done

SLURMDBD_LOG=$(grep LogFile=${VARLOGSLURM} ${SLURMDBD_CONF} | sed 's:LogFile=::')

if [ ! -L ${VARLOGSLURM} ] ; then
  ErrExit ${EX_CONFIG} "VARLOGSLURM:${VARLOGSLURM} is not a symlink"
fi

if [ ! -d ${VARLOGSLURM_LINK} ] ; then
  ErrExit ${EX_CONFIG} "VARLOGSLURM_LINK:${VARLOGSLURM_LINK} is not a directory"
fi

Rc ErrExit ${EX_OSFILE} "printf '\n--- %s %s ---\n' ${HOSTNAME} $(basename $0) >> ${SLURMDBD_LOG}"

SlurmUser=$(grep SlurmUser ${SLURMDBD_CONF} | sed 's/SlurmUser=//')
Rc ErrExit ${EX_OSFILE} "chmod 0600 ${SLURMDBD_CONF}"
Rc ErrExit ${EX_OSFILE} "chown ${SlurmUser}:${SlurmUser} ${SLURMDBD_CONF}"

trap '' 0
exit ${EX_OK}

# vim: background=dark ts=2 sw=2 syntax
